// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;
using TelegramBot;

#nullable disable

namespace TelegramBot.Migrations
{
    [DbContext(typeof(OracleContext))]
    [Migration("20231003034939_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("CHBTDEV")
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.HasSequence("CANDN");

            modelBuilder.HasSequence("LIST_FORM_HS_SEQ");

            modelBuilder.HasSequence("NOTIF_SEC");

            modelBuilder.HasSequence("SUGGBOOK");

            modelBuilder.Entity("TelegramBot.Entities.Amei", b =>
                {
                    b.Property<int>("Usrid")
                        .HasPrecision(8)
                        .HasColumnType("NUMBER(8)")
                        .HasColumnName("USRID");

                    b.Property<int?>("AmeiChief")
                        .HasPrecision(8)
                        .HasColumnType("NUMBER(8)")
                        .HasColumnName("AMEI_CHIEF");

                    b.Property<string>("Bukrs")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(4)")
                        .HasColumnName("BUKRS");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("EMAIL");

                    b.Property<string>("Midnm")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("MIDNM");

                    b.Property<string>("Nachn")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("NACHN");

                    b.Property<string>("Perid")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("PERID");

                    b.Property<int>("Pernr")
                        .HasPrecision(8)
                        .HasColumnType("NUMBER(8)")
                        .HasColumnName("PERNR");

                    b.Property<int?>("PernrOld")
                        .HasPrecision(8)
                        .HasColumnType("NUMBER(8)")
                        .HasColumnName("PERNR_OLD");

                    b.Property<string>("Persg")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("PERSG");

                    b.Property<string>("Phone")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("PHONE");

                    b.Property<int?>("Plans")
                        .HasPrecision(8)
                        .HasColumnType("NUMBER(8)")
                        .HasColumnName("PLANS");

                    b.Property<string>("Position")
                        .HasMaxLength(40)
                        .HasColumnType("NVARCHAR2(40)")
                        .HasColumnName("POSITION");

                    b.Property<byte?>("Rgubr")
                        .HasPrecision(2)
                        .HasColumnType("NUMBER(2)")
                        .HasColumnName("RGUBR");

                    b.Property<byte?>("Robuv")
                        .HasPrecision(2)
                        .HasColumnType("NUMBER(2)")
                        .HasColumnName("ROBUV");

                    b.Property<byte?>("Rodjd")
                        .HasPrecision(2)
                        .HasColumnType("NUMBER(2)")
                        .HasColumnName("RODJD");

                    b.Property<byte?>("Rrost")
                        .HasPrecision(3)
                        .HasColumnType("NUMBER(3)")
                        .HasColumnName("RROST");

                    b.Property<string>("Vdsk1")
                        .HasMaxLength(14)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(14)")
                        .HasColumnName("VDSK1");

                    b.Property<string>("Vorna")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("VORNA");

                    b.Property<string>("Zznachn")
                        .HasMaxLength(80)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(80)")
                        .HasColumnName("ZZNACHN");

                    b.Property<string>("Zzvorna")
                        .HasMaxLength(80)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(80)")
                        .HasColumnName("ZZVORNA");

                    b.HasKey("Usrid")
                        .HasName("AMEI_PK");

                    b.HasIndex(new[] { "Pernr", "PernrOld" }, "PERNR_IDX")
                        .IsUnique()
                        .HasFilter("\"PERNR_OLD\" IS NOT NULL");

                    b.ToTable("AMEI", "CHBTDEV");
                });

            modelBuilder.Entity("TelegramBot.Entities.PassRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<int>("FromId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("PassScheduleId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("ToUsrid")
                        .HasColumnType("NUMBER(8)");

                    b.HasKey("Id");

                    b.HasIndex("FromId");

                    b.HasIndex("PassScheduleId");

                    b.HasIndex("ToUsrid");

                    b.ToTable("PassRequest", "CHBTDEV");
                });

            modelBuilder.Entity("TelegramBot.Entities.PassSchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Day")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<DateTime>("End")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<DateTime>("Start")
                        .HasColumnType("TIMESTAMP(7)");

                    b.HasKey("Id");

                    b.ToTable("PassSchedule", "CHBTDEV");
                });

            modelBuilder.Entity("TelegramBot.Entities.PassStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<int?>("PassRequestId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("Status")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Id");

                    b.HasIndex("PassRequestId");

                    b.ToTable("PassStatus", "CHBTDEV");
                });

            modelBuilder.Entity("TelegramBot.Entities.PassUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AmeiUsrid")
                        .HasColumnType("NUMBER(8)");

                    b.Property<string>("Fullname")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("IIN")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int>("TelegramId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("Id");

                    b.HasIndex("AmeiUsrid");

                    b.ToTable("PassUser", "CHBTDEV");
                });

            modelBuilder.Entity("TelegramBot.Entities.PassRequest", b =>
                {
                    b.HasOne("TelegramBot.Entities.PassUser", "From")
                        .WithMany()
                        .HasForeignKey("FromId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TelegramBot.Entities.PassSchedule", "PassSchedule")
                        .WithMany()
                        .HasForeignKey("PassScheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TelegramBot.Entities.Amei", "To")
                        .WithMany()
                        .HasForeignKey("ToUsrid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("From");

                    b.Navigation("PassSchedule");

                    b.Navigation("To");
                });

            modelBuilder.Entity("TelegramBot.Entities.PassStatus", b =>
                {
                    b.HasOne("TelegramBot.Entities.PassRequest", null)
                        .WithMany("PassStatus")
                        .HasForeignKey("PassRequestId");
                });

            modelBuilder.Entity("TelegramBot.Entities.PassUser", b =>
                {
                    b.HasOne("TelegramBot.Entities.Amei", "Amei")
                        .WithMany()
                        .HasForeignKey("AmeiUsrid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Amei");
                });

            modelBuilder.Entity("TelegramBot.Entities.PassRequest", b =>
                {
                    b.Navigation("PassStatus");
                });
#pragma warning restore 612, 618
        }
    }
}
